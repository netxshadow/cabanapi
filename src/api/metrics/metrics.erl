-module( metrics ).

-export([
  inc/1, 
  inc/2,
  init/0, 
  % response_data/2,
  request_v1/2,
  histogram_inc/3
]).

%% ===================================================================
%% metric:inc(count_request, [Terminal]),
%% ===================================================================
init() -> 

  prometheus_counter:declare([
    {name, health_check}, 
    {help, "Request health check count"}, 
    {labels, []}
  ]),

  prometheus_histogram:new([
    {name, http_request_duration_milliseconds }, 
    {labels, [code]}, 
    {buckets, [
      1, 50, 70, 100, 300, 500, 750,
      1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 
      10000, 15000, 20000, 30000, 60000, 100000
    ]}, 
    {help, "Request execution time"}
  ]),
  
  prometheus_histogram:new([
    {name, http_incoming_request_duration_milliseconds }, 
    % {labels, [code]}, 
    {buckets, [
      1, 50, 70, 100, 300, 500, 750,
      1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 
      10000, 15000, 20000, 30000, 60000, 100000
    ]}, 
    {help, "Incoming request execution time"}
  ]).
%% ===================================================================
%% 
%% ===================================================================
request_v1( _, _ ) -> { 200, prometheus_text_format:format(), { metrics, #{ "Content-Type" => "text/plain" } } }.
% ==============================================================================================
% === 
% ==============================================================================================
inc(Caller) ->
  prometheus_counter:inc(Caller, []).
% ==============================================================================================
% === 
% ==============================================================================================
inc(Caller, Label) ->
  prometheus_counter:inc(Caller, Label).
% ==============================================================================================
% ===
% ==============================================================================================
histogram_inc(Name, Label, Value) ->
  prometheus_histogram:observe(Name, Label, Value).
% ==============================================================================================
% === 
% ==============================================================================================
